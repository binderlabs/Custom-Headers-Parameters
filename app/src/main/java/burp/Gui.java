/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package burp;
import burp.api.montoya.BurpExtension;
import burp.api.montoya.MontoyaApi;
import burp.api.montoya.http.message.HttpHeader;
import burp.api.montoya.http.handler.HttpResponseReceived;
import burp.api.montoya.ui.UserInterface;
import burp.api.montoya.ui.editor.HttpRequestEditor;
import burp.api.montoya.ui.editor.HttpResponseEditor;
import static burp.api.montoya.http.message.HttpHeader.httpHeader;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import static burp.api.montoya.ui.editor.EditorOptions.READ_ONLY;
import burp.api.montoya.ui.editor.RawEditor;
import java.awt.event.ActionEvent;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author kyawmt
 */
public class Gui extends javax.swing.JPanel {
    
    /**
     * Creates new form Gui
     */
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        splitPane = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        headertable = new javax.swing.JTable();
        addbuttonhead = new javax.swing.JButton();
        rmbuttonhead = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        paramtable = new javax.swing.JTable();
        addbuttonparam = new javax.swing.JButton();
        rmbuttonparam = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        editparam = new javax.swing.JButton();
        editheader = new javax.swing.JButton();

        splitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        JTabbedPane tabs = new JTabbedPane();
        UserInterface userInterface = Demo.api.userInterface();
        HttpRequestEditor requestViewer = userInterface.createHttpRequestEditor(READ_ONLY);
        //RawEditor requestViewer = userInterface.createRawEditor();
        HttpResponseEditor responseViewer = userInterface.createHttpResponseEditor(READ_ONLY);
        tabs.addTab("Request", requestViewer.uiComponent());
        tabs.addTab("Response", responseViewer.uiComponent());

        splitPane.setRightComponent(tabs);

        headertable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Value"
            }
        ));
        jScrollPane3.setViewportView(headertable);

        addbuttonhead.setText("Add");
        addbuttonhead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonheadActionPerformed(evt);
            }
        });

        rmbuttonhead.setText("Remove");
        rmbuttonhead.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmbuttonheadActionPerformed(evt);
            }
        });

        jLabel1.setText("Headers");

        jLabel2.setText("Parameters");

        paramtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Parameter", "Value", "Method"
            }
        ));
        jScrollPane1.setViewportView(paramtable);

        addbuttonparam.setText("Add");
        addbuttonparam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbuttonparamActionPerformed(evt);
            }
        });

        rmbuttonparam.setText("Remove");
        rmbuttonparam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rmbuttonparamActionPerformed(evt);
            }
        });

        jLabel3.setText("Scope Only");

        String status = String.valueOf(Demo.isScopeonly);
        statusLabel.setText(status);

        jToggleButton1.setText("ON/OFF Scope");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        editparam.setText("Edit");
        editparam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editparamActionPerformed(evt);
            }
        });

        editheader.setText("Edit");
        editheader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editheaderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(statusLabel))
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(editheader, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(rmbuttonhead, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addbuttonhead, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addbuttonparam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(rmbuttonparam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(editparam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addGap(0, 64, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addbuttonhead)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editheader)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rmbuttonhead))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addbuttonparam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editparam)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rmbuttonparam)))
                .addGap(24, 24, 24)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusLabel)
                    .addComponent(jToggleButton1))
                .addContainerGap(347, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 739, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(splitPane)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        //here
        JTable table = new JTable(Demo.tableModel)
        {
            @Override
            public void changeSelection(int rowIndex, int columnIndex, boolean toggle, boolean extend)
            {
                // show the log entry for the selected row
                HttpResponseReceived responseReceived = Demo.tableModel.get(rowIndex);
                requestViewer.setRequest(responseReceived.initiatingRequest());
                responseViewer.setResponse(responseReceived);

                super.changeSelection(rowIndex, columnIndex, toggle, extend);
            }
        };

        JScrollPane scrollPane = new JScrollPane(table);

        splitPane.setLeftComponent(scrollPane);
    }// </editor-fold>//GEN-END:initComponents
    
    String[] options = {"BODY", "COOKIE", "URL"};
    private void addbuttonheadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonheadActionPerformed
        // TODO add your handling code here:
        JTextField header_name = new JTextField(5);
        JTextField header_value = new JTextField(5);

        JPanel myPanel = new JPanel();
        myPanel.add(new JLabel("Header:"));
        myPanel.add(header_name);
        myPanel.add(Box.createHorizontalStrut(15)); // a spacer
        myPanel.add(new JLabel("Value:"));
        myPanel.add(header_value);

        int result = JOptionPane.showConfirmDialog(null, myPanel, 
                 "Add Headers", JOptionPane.OK_CANCEL_OPTION);
        if (result == JOptionPane.OK_OPTION) {
            Object[] newRow = new Object[2];
            String[] inputs = new String[2];
            inputs[0] = header_name.getText();
            inputs[1] = header_value.getText();
            newRow[0] = inputs[0];
            newRow[1] = inputs[1];
            Demo.api.logging().logToOutput(inputs[0]);
            // Get the table model for the JTable
            DefaultTableModel model = (DefaultTableModel) headertable.getModel();

            // Add the new row to the table model
            model.addRow(newRow);
            List<List<Object>> data = convert(headertable);
            Demo.handler.setHeader(data);
        }
//        Object[] newRow = new Object[2];
        

//        inputs[0] = JOptionPane.showInputDialog(this, "Enter data for column 1:");
//        inputs[1] = JOptionPane.showInputDialog(this, "Enter data for column 2:");
//
//        // Set the data for the new row
    }//GEN-LAST:event_addbuttonheadActionPerformed

    private void rmbuttonheadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmbuttonheadActionPerformed
        // TODO add your handling code here:
        int selectedRow = headertable.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) headertable.getModel();
            model.removeRow(selectedRow);
            List<List<Object>> data = convert(headertable);
            Demo.handler.setHeader(data);
        }
    }//GEN-LAST:event_rmbuttonheadActionPerformed

    private void addbuttonparamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbuttonparamActionPerformed
        // TODO add your handling code here:
        JTextField parameter_name = new JTextField(5);
        JTextField param_value = new JTextField(5);
        String method = "";
        JPanel paraPanel = new JPanel();
        paraPanel.add(new JLabel("Header:"));
        paraPanel.add(parameter_name);
        paraPanel.add(Box.createHorizontalStrut(15)); // a spacer
        paraPanel.add(new JLabel("Value:"));
        paraPanel.add(param_value);
//        String[] options = {"BODY", "COOKIE", "URL"};
        JComboBox<String> comboBox = new JComboBox<>(options);
        comboBox.setSelectedIndex(0);
        paraPanel.add(comboBox);
        int result = JOptionPane.showConfirmDialog(null, paraPanel, 
                    "Add Parameter", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
            Object[] newRow = new Object[3];
            String[] inputs = new String[3];
            inputs[0] = parameter_name.getText();
            inputs[1] = param_value.getText();
            newRow[0] = inputs[0];
            newRow[1] = inputs[1];
            newRow[2] = comboBox.getSelectedItem();

            // Get the table model for the JTable
            DefaultTableModel model = (DefaultTableModel) paramtable.getModel();

            // Add the new row to the table model
            model.addRow(newRow);
            List<List<Object>> data = convert(paramtable);
            Demo.handler.setParameter(data);
        }
    }//GEN-LAST:event_addbuttonparamActionPerformed

    private void rmbuttonparamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rmbuttonparamActionPerformed
        // TODO add your handling code here:
                int selectedRow = paramtable.getSelectedRow();
        if (selectedRow != -1) {
            DefaultTableModel model = (DefaultTableModel) paramtable.getModel();
            model.removeRow(selectedRow);
            List<List<Object>> data = convert(paramtable);
            Demo.handler.setParameter(data);
    }//GEN-LAST:event_rmbuttonparamActionPerformed
    }
    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        JToggleButton btn =  (JToggleButton) evt.getSource();
        if(btn.isSelected()){
            statusLabel.setText("true");
            Demo.isScopeonly = true;
        }
        else{
            statusLabel.setText("false");
            Demo.isScopeonly = false;
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void editheaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editheaderActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = headertable.getSelectedRow();
        if (selectedRowIndex != -1) {
        // Get the values of the selected row
        String header = (String) headertable.getValueAt(selectedRowIndex, 0);
        String value = (String) headertable.getValueAt(selectedRowIndex, 1);
        // Create a panel for the edit form
        JTextField headerField = new JTextField(header, 5);
        JTextField valueField = new JTextField(value, 5);
        
        JPanel editPanel = new JPanel();
        editPanel.add(new JLabel("Header:"));
        editPanel.add(headerField);
        editPanel.add(Box.createHorizontalStrut(15)); // a spacer
        editPanel.add(new JLabel("Value:"));
        editPanel.add(valueField);

        // Show the edit form and update the row if the user clicked OK
        int result = JOptionPane.showConfirmDialog(null, editPanel, "Edit Header", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
            // Update the values of the selected row
            headertable.setValueAt(headerField.getText(), selectedRowIndex, 0);
            headertable.setValueAt(valueField.getText(), selectedRowIndex, 1);

            // Save the changes
            List<List<Object>> data = convert(headertable);
            Demo.handler.setHeader(data);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a row to edit.", "Edit Header", JOptionPane.INFORMATION_MESSAGE);
    }
        
    }//GEN-LAST:event_editheaderActionPerformed

    private void editparamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editparamActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = paramtable.getSelectedRow();
        if (selectedRowIndex != -1) {
        // Get the values of the selected row
        String header = (String) paramtable.getValueAt(selectedRowIndex, 0);
        String value = (String) paramtable.getValueAt(selectedRowIndex, 1);
        String location = (String) paramtable.getValueAt(selectedRowIndex, 2);

        // Create a panel for the edit form
        JTextField headerField = new JTextField(header,5);
        JTextField valueField = new JTextField(value,5);
//        String[] options = {"BODY", "COOKIE", "URL"};
        JComboBox<String> comboBox = new JComboBox<>(options);
        comboBox.setSelectedItem(location);
        JPanel editPanel = new JPanel();
        editPanel.add(new JLabel("Header:"));
        editPanel.add(headerField);
        editPanel.add(Box.createHorizontalStrut(15)); // a spacer
        editPanel.add(new JLabel("Value:"));
        editPanel.add(valueField);
        editPanel.add(comboBox);

        // Show the edit form and update the row if the user clicked OK
        int result = JOptionPane.showConfirmDialog(null, editPanel, "Edit Header", JOptionPane.OK_CANCEL_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
            // Update the values of the selected row
            paramtable.setValueAt(headerField.getText(), selectedRowIndex, 0);
            paramtable.setValueAt(valueField.getText(), selectedRowIndex, 1);
            paramtable.setValueAt(comboBox.getSelectedItem(), selectedRowIndex, 2);

            // Save the changes
            List<List<Object>> data = convert(paramtable);
            Demo.handler.setParameter(data);
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a row to edit.", "Edit Header", JOptionPane.INFORMATION_MESSAGE);
    }
    }//GEN-LAST:event_editparamActionPerformed
   
public static List<List<Object>> convert(JTable table) {
        List<List<Object>> data = new ArrayList<>();
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        int numRows = model.getRowCount();
        int numCols = model.getColumnCount();
        for (int row = 0; row < numRows; row++) {
            List<Object> rowData = new ArrayList<>();
            for (int col = 0; col < numCols; col++) {
                rowData.add(model.getValueAt(row, col));
            }
            data.add(rowData);
        }
        return data;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addbuttonhead;
    private javax.swing.JButton addbuttonparam;
    private javax.swing.JButton editheader;
    private javax.swing.JButton editparam;
    private javax.swing.JTable headertable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTable paramtable;
    private javax.swing.JButton rmbuttonhead;
    private javax.swing.JButton rmbuttonparam;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
